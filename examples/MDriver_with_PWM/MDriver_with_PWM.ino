#include "MDriver.h"

/* 
 * Библиотека MDrive предназначена для управление коллекторными двигателями
 * посредством драйвера двигателе на микросхеме L293 или L298.
 * 
 * В данном примере выходы драйвера двигателей подключены к следующим
 * цифровым пинам Arduino: 
 * 1) для первого двигателя:*/
#define ENA 3 //(ШИМ)
#define IN1 2
#define IN2 4
  //2) для второго двигателя:
#define ENB 5 //(ШИМ)
#define IN3 6
#define IN4 7

/* 
 * Библиотека содержит следующие функции:
 * speed(uint8_t speed); - принимает значение от 0 до 255, также принимает
 *  константу MAX, что соответствует значению 255. Управляет 
 *  скоростью вращения. Если двигатель инициализирован без регулировки
 *  скорости, то эта функция становится неактивной.
 * forward(); и backward(); - управляют вращением двигателя в разных 
 *  направлениях
 * stop(); - остановка двигателя
 */
 
/* 
 * Первый способ инициализации.
 * Подключение двигателей с функцией регулировки скорости.
 * Конструктор принимает следующие аргументы MDrive(EN, IN1, IN2) 
 */
MDriver m1(ENA, IN1, IN2);
MDriver m2(ENB, IN3, IN4);

/* 
 * Второй способ инициализации.
 * Подключение моторов без регулировки скорости, 
 * подразумевается что пин EN на плате драйвера двигателей подтянут к +5V.
 * Конструктор принимает следующие аргументы MDrive(IN1, IN2)
 */
//MDriver m1(IN1, IN2);
//MDriver m2(IN3, IN4);

//С использованием регулировки скорости
void setup()
{
  for (int i = 255; i > 0; i -= 5)  //Плавное уменьшение скорости до полной остановки
  {
    m1.speed(i);
    m1.backward();

    m2.speed(i);
    m2.backward();
    delay(500);
  }
    
  for (int i = 0; i < 255; i += 5)  //Плавное увеличение скорости до максимальной, вращение в другую сторону
  {
    m1.speed(i);
    m1.forward();

    m2.speed(i);
    m2.forward();
    delay(500);
  }

  //Вращение двигателей в противоположных направлениях
  m1.speed(MAX);
  m2.speed(MAX);
  m1.forward();
  m2.backward();
}

void loop(){}
